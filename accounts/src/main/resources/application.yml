server:
  port: 8089
info:
  description: "Accounts Microservice"
  version: "1.0.0"
  title: "Accounts Microservice"
spring:
  application:
    name: "accounts"
  profiles:
    active: "qa"
  datasource:
    url: jdbc:mysql://localhost:3307/accountsdb
    username: root
    password: root2
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    config:
      uri: "http://configserver:8071/"
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
      kafka:
        binder:
          brokers: localhost:9092

management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: "/actuator"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      show-details: ALWAYS
      probes:
        add-additional-paths: true
        enabled: true
    shutdown:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

logging:
  level:
    com:
      raja:
        accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name}],%X{trace_id},%X{span_id}"